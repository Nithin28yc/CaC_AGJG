def label = "mypod-${UUID.randomUUID().toString()}"
def serviceaccount = "jenkins-admin"
podTemplate(label: label, containers: [
   	containerTemplate(name: 'nmap', image: 'uzyexe/nmap', ttyEnabled: true, slaveConnectTimeout:300, command: 'cat'),
    containerTemplate(name: 'zap', image: 'owasp/zap2docker-stable', privileged: true, ttyEnabled: true, command: 'cat'),
    containerTemplate(name: 'maven', image: 'maven:3.3.9-jdk-8-alpine', ttyEnabled: true, command: 'cat'),
    containerTemplate(name: 'ubuntu', image: 'ubuntu', ttyEnabled: true, command: 'cat'),
    ]) {
currentBuild.description = "GDPR,HIPPA,PCI,SOX-${Project_Name}-${Workpod}"
    node(label) {
        properties([pipelineTriggers([cron("${Schedule_Frequency}")]),
        parameters([string(name: 'Schedule_Frequency', defaultValue: "$Schedule_Frequency"),
        string(name: 'dns', defaultValue: "cacgen7.continuoustestplatform.com"),
        string(name: 'Workpod', defaultValue: "$Workpod"),
        string(name: 'Project_Name', defaultValue: "$Project_Name")])
        ])
	def GIT_URL= 'https://innersource.accenture.com/scm/ethan/ct_security.git'

	def CREDENTIAL_ID = "soham"
    def GCR_HUB_ACCOUNT = 'localhost:32121/root'
    def GITLAB_BRANCH = "sohamSecurity"
    def REPO = "ct_security"
    def kubernetesversion='1.16'
    def kubehunterip='10.0.123.78'
//    def dns='a744dcd9997b0443eb93f6d517b9a696-1856472084.eu-west-3.elb.amazonaws.com'

    def DOCKER_HUB_ACCOUNT = 'aiindevops.azurecr.io'
  stage('HTTPS port'){
      sh 'sleep 77'
  }
  stage('Secured SSL port'){
      sh 'sleep 89'
  }
  stage('TCP/IP-based communication'){
      sh 'sleep 60'
  }
  stage('Unauthorised port access'){
      sh 'sleep 60'
  }
  try{
stage('Nmap port scan') {

	container('nmap') {
		sh '''
		#Give platform url without https as below example

		nmap -v -A ${dns} >> nmap.txt
		cat nmap.txt
		cd "$(pwd)"						
		ls -lart
#		mv nmap.txt ct_performance_security/SecurityReports/NmapReports/NmapReport.txt
	
		'''
	}
	catchError(buildResult: 'SUCCESS', stageResult: 'SUCCESS') {
                    sh "exit 0"
                }
}
}
catch(Exception e){
     catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                    sh "exit 1"
                }
}
	stage('Nexus-upload'){
	    container('ubuntu'){
		     sh 'apt-get update'
		     sh 'apt-get install zip -y'
             sh 'zip Ports_Management.zip nmap.txt'
		container('maven'){
		withCredentials([usernamePassword(credentialsId: 'nexus-creds', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                  sh '''
#                  cd ct_performance_security/SecurityReports/NmapReports
				  
                  curl --upload-file Ports_Management.zip -u $USERNAME:$PASSWORD -v http://nexus.ethan.svc.cluster.local:8083/nexus/repository/Compliance_Security/${JOB_NAME}/$BUILD_ID/
                  '''
			}	  }
        }
		}
		}
      
    }
    